services:
  rabbitmq:
    image: rabbitmq:3.13.7-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - carprice-network

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5433:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 30
    networks:
      - carprice-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 8080:80
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - carprice-network

  carprice-scraper:
    build:
      context: ./carprice-scraper
    volumes:
      - ./carprice-scraper:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    command: python main.py
    networks:
      - carprice-network

  carprice-processor:
    build:
      context: ./carprice-processor
    volumes:
      - ./carprice-processor:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    env_file:
      - .env
    command: sh -c "until pg_isready -h postgres -U ${POSTGRES_USER} -d ${POSTGRES_DB}; do echo 'Esperando o Postgres...'; sleep 2; done && python main.py"
    networks:
      - carprice-network

volumes:
  pgdata:

networks:
  carprice-network:
    driver: bridge
